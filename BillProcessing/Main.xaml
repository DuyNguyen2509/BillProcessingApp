<Activity mc:Ignorable="sap sap2010" x:Class="Main" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="844,1344" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ufa="clr-namespace:UiPath.Forms.Activities;assembly=UiPath.Forms.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>DocumentFormat.OpenXml.Wordprocessing</x:String>
      <x:String>DocumentFormat.OpenXml</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.UIAutomationNext.Models.ExtractData</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.UIAutomationNext.Activities.Models</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Studio.Forms.Runtime</x:String>
      <x:String>UiPath.Forms.Activities</x:String>
      <x:String>UiPath.Platform.GlobalVariables</x:String>
      <x:String>UiPath.Forms.Activities.Base</x:String>
      <x:String>System.Threading.Tasks</x:String>
      <x:String>UiPath.Form.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>DocumentFormat.OpenXml</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Forms.Runtime</AssemblyReference>
      <AssemblyReference>UiPath.Forms.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>System.Threading.Tasks.Parallel</AssemblyReference>
      <AssemblyReference>UiPath.Form.Activities</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">False</x:Boolean>
      <x:Boolean x:Key="ShouldCollapseAll">False</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="685.6,1279.2" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default=" " Name="invoiceTaxCode" />
      <Variable x:TypeArguments="x:String" Default=" " Name="invoiceDate" />
      <Variable x:TypeArguments="x:String" Default=" " Name="invoiceCompany" />
      <Variable x:TypeArguments="x:String" Name="invoiceSubtotal" />
      <Variable x:TypeArguments="x:String" Name="invoiceVat" />
      <Variable x:TypeArguments="x:String" Default=" " Name="invoiceTotal" />
      <Variable x:TypeArguments="x:String" Default="C:\Users\quang\Downloads\2" Name="selectedFolder" />
      <Variable x:TypeArguments="x:String" Default=" " Name="str" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="623.2,1167.2" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Directory.GetFiles(selectedFolder)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="file" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="589.6,979.2" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:IfElseIf DisplayName="Else If" sap:VirtualizedContainerService.HintSize="546.4,488" sap2010:WorkflowViewState.IdRef="IfElseIf_1">
              <ui:IfElseIf.ConditionBlocks>
                <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                  <ui:IfElseIfBlock BlockType="If" Condition="[file.Contains(&quot;pdf&quot;)]">
                    <ui:IfElseIfBlock.Then>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="449.6,83.2" sap2010:WorkflowViewState.IdRef="Sequence_11">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="DetectTextForPdf.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="DetectText\DetectTextForPdf.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <OutArgument x:TypeArguments="x:String" x:Key="invoiceTaxCode">[invoiceTaxCode]</OutArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="invoiceDate">[invoiceDate]</OutArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="invoiceCompany">[invoiceCompany]</OutArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="invoiceSubtotal">[invoiceSubtotal]</OutArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="invoiceVat">[invoiceVat]</OutArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="invoiceTotal">[invoiceTotal]</OutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="filePdf">[file]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_2">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String" xml:space="preserve">[str+Environment.NewLine+"PDF"+Environment.NewLine +"TaxCode: " + invoiceTaxCode.Trim+Environment.NewLine+"Ngày:  "+invoiceDate.Replace("(day)","").Replace("(date)","").Replace("S","").Replace("(year)","").Replace("(month)","").Replace("(Date)","").Replace("tháng","/").Replace("năm","/").Replace(" ","").Replace("  ","")+Environment.NewLine+"Seller:  "+invoiceCompany+Environment.NewLine+"Thành tiền: "+invoiceSubtotal+Environment.NewLine+"VAT:  "+invoiceVat+Environment.NewLine+" Total: "+invoiceTotal.Trim]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </ui:IfElseIfBlock.Then>
                  </ui:IfElseIfBlock>
                  <ui:IfElseIfBlock BlockType="ElseIf" Condition="[file.Contains(&quot;png&quot;) or file.Contains(&quot;jpg&quot;) or file.Contains(&quot;jpeg&quot;)]">
                    <ui:IfElseIfBlock.Then>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="449.6,83.2" sap2010:WorkflowViewState.IdRef="Sequence_12">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="DetectText\DetectTextForImg.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="DetectText\DetectTextForImg.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="fileImage">[file]</InArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="invoiceDate">[invoiceDate]</OutArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="invoiceSubtotal">[invoiceSubtotal]</OutArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="invoiceVat">[invoiceVat]</OutArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="invoiceTotal">[invoiceTotal]</OutArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="invoiceTaxCode">[invoiceTaxCode]</OutArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="invoiceCompany">[invoiceCompany]</OutArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_1">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String" xml:space="preserve">[str+Environment.NewLine+Environment.NewLine+"Image"+Environment.NewLine  +"TaxCode: " + invoiceTaxCode.Replace("#","0")+Environment.NewLine+"Ngày:  "+invoiceDate.Replace("l","1").Replace("I","1")+Environment.NewLine+"Seller:  "+invoiceCompany+Environment.NewLine+"Thành tiền: "+invoiceSubtotal+Environment.NewLine+"VAT:  "+invoiceVat+Environment.NewLine+" Total: "+invoiceTotal+Environment.NewLine]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </ui:IfElseIfBlock.Then>
                  </ui:IfElseIfBlock>
                </sc:BindingList>
              </ui:IfElseIf.ConditionBlocks>
            </ui:IfElseIf>
            <ui:WriteTextFile File="{x:Null}" DisplayName="Write Text File" FileName="UnitTest\result.txt" sap:VirtualizedContainerService.HintSize="546.4,134.4" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[str]" />
            <ufa:ShowFormActivity InstanceName="{x:Null}" Left="{x:Null}" Top="{x:Null}" DisplayName="Show Form" FormId="a1a484ab-8574-4f49-b086-9cdc3eaa71d2" sap:VirtualizedContainerService.HintSize="546.4,187.2" sap2010:WorkflowViewState.IdRef="ShowFormActivity_1" IsAsync="True" Title="Validation Invoice" WindowState="[UiPath.Studio.Forms.Runtime.WindowState.Minimized]">
              <ufa:ShowFormActivity.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="Date">[invoiceDate]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="TaxCode">[invoiceTaxCode]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="Seller">[invoiceCompany]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="SubTotal">[invoiceSubtotal]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="Vat">[invoiceVat]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="Total">[invoiceTotal]</InArgument>
              </ufa:ShowFormActivity.Arguments>
              <ufa:ShowFormActivity.Height>
                <InArgument x:TypeArguments="s:Nullable(x:Int32)">
                  <Literal x:TypeArguments="s:Nullable(x:Int32)" Value="800" />
                </InArgument>
              </ufa:ShowFormActivity.Height>
              <ufa:ShowFormActivity.ShowInTaskbar>
                <InArgument x:TypeArguments="s:Nullable(x:Boolean)">
                  <Literal x:TypeArguments="s:Nullable(x:Boolean)" Value="True" />
                </InArgument>
              </ufa:ShowFormActivity.ShowInTaskbar>
              <ufa:ShowFormActivity.ShowMargin>
                <InArgument x:TypeArguments="s:Nullable(x:Boolean)">
                  <Literal x:TypeArguments="s:Nullable(x:Boolean)" Value="True" />
                </InArgument>
              </ufa:ShowFormActivity.ShowMargin>
              <ufa:ShowFormActivity.TopMost>
                <InArgument x:TypeArguments="s:Nullable(x:Boolean)">
                  <Literal x:TypeArguments="s:Nullable(x:Boolean)" Value="False" />
                </InArgument>
              </ufa:ShowFormActivity.TopMost>
              <ufa:ShowFormActivity.Width>
                <InArgument x:TypeArguments="s:Nullable(x:Int32)">
                  <Literal x:TypeArguments="s:Nullable(x:Int32)" Value="800" />
                </InArgument>
              </ufa:ShowFormActivity.Width>
            </ufa:ShowFormActivity>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
  </Sequence>
</Activity>